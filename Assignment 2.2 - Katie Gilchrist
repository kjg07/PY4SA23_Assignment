{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "c46aa3ae-6b6a-4682-abad-12d31b85cce6",
   "metadata": {},
   "source": [
    "# Assignment 2 - Katie Gilchrist "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "761fb6d6-e31a-41d5-8efc-ba993a86e446",
   "metadata": {},
   "source": [
    "### **200014257**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1888671a-c2bd-4a67-a79f-a27645c27ff3",
   "metadata": {},
   "source": [
    "### https://github.com/kjg07/PY4SA23_Assignment.git"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ff23b399-8db4-4266-aea1-96e4b2a0fed0",
   "metadata": {},
   "source": [
    "## **Python Basics**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "671bf5a2-d726-4334-836e-71fa7ccef22a",
   "metadata": {},
   "source": [
    "### Task 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "aca4fd29-f3be-448f-bc84-fa2b4c8cf576",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "12 is divisible by three\n"
     ]
    }
   ],
   "source": [
    "x = 12\n",
    "if x/3:\n",
    "    print(str(x) + \" is divisible by three\")\n",
    "    \n",
    "else:\n",
    "    print(str(x) + \" is not divisible by three\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bf0b9559-000e-4eba-9746-c26fbe3e0e8a",
   "metadata": {},
   "source": [
    "### Task 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "25162790-90a0-47bc-86cb-c2d36cacb0d4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "strawberry is an acceptable fruit.\n"
     ]
    }
   ],
   "source": [
    "lst1 = ['apple', 'orange', 'pear', 'kiwi', 'strawberry']\n",
    "\n",
    "x = 'strawberry'\n",
    "\n",
    "if x in lst1:\n",
    "    print(str(x) + \" is an acceptable fruit.\")\n",
    "    \n",
    "else:\n",
    "        print(str(x) + \"is not an acceptable fruit\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1b31fd5f-bb64-4a61-81e2-8e0e5316ff4a",
   "metadata": {},
   "source": [
    "### Task 3 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "e931c70c-ed87-4863-9bea-d12fca2e77ec",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: haversine in /Users/katiegilchrist/miniconda3/envs/py4sa/lib/python3.10/site-packages (2.8.0)\n"
     ]
    }
   ],
   "source": [
    "!pip install haversine"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "29934456-b30f-4472-bd72-ea70da4691b3",
   "metadata": {},
   "outputs": [],
   "source": [
    "import haversine as hs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "6cd38692-d03d-4f14-bf85-7631a851ee1b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "42.265087732821904"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lst1=(56.3202, 3.0101)\n",
    "lst2=(55.9533, 3.1883)\n",
    "hs.haversine(lst1,lst2)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a6439ffe-9817-4128-9970-cc9ad549b6b7",
   "metadata": {},
   "source": [
    "## **Pandas and NumPy**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "547ff345-db66-4ac0-9912-e46d20ebf19d",
   "metadata": {},
   "source": [
    "### Q1 - How many trees are of the Quercus or Acer genus?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "27aeb329-81c5-4652-9287-e851c79fef61",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "85a7733f-8d7d-403d-93a3-ec64b24fdaab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5675"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "genus_df = pd.read_csv(\"/Users/katiegilchrist/Desktop/Python/Assignment 2 Data/portland_park_trees.csv\",index_col=30)\n",
    "gen_df = genus_df.query(\"Genus == 'Quercus'| Genus == 'Acer'\")\n",
    "len(gen_df)\n",
    "                        "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "45f97c61-b2ba-49f5-aa13-bb2985edfcc8",
   "metadata": {},
   "source": [
    "##### There are 5,676 trees of the Quercus or Acer genus."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3dd2ae12-bdae-42c6-9b9b-ead3f79d2695",
   "metadata": {},
   "source": [
    "### Q2 - How many trees are of the Quercus or Acer genus and have a DBH larger than 50 inches?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "22b80acb-fc7c-4d16-bce5-76a63db46854",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>fid</th>\n",
       "      <th>OBJECTID</th>\n",
       "      <th>Inventory_</th>\n",
       "      <th>Species</th>\n",
       "      <th>DBH</th>\n",
       "      <th>Condition</th>\n",
       "      <th>TreeHeight</th>\n",
       "      <th>CrownWidth</th>\n",
       "      <th>CrownWid_1</th>\n",
       "      <th>CollectedB</th>\n",
       "      <th>...</th>\n",
       "      <th>Family</th>\n",
       "      <th>Common_nam</th>\n",
       "      <th>Genus_spec</th>\n",
       "      <th>Functional</th>\n",
       "      <th>Size</th>\n",
       "      <th>Native</th>\n",
       "      <th>Edible</th>\n",
       "      <th>Nuisance</th>\n",
       "      <th>Origin</th>\n",
       "      <th>Species_fa</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Genus</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Acer</th>\n",
       "      <td>128</td>\n",
       "      <td>953</td>\n",
       "      <td>2017/05/24</td>\n",
       "      <td>ACMA</td>\n",
       "      <td>50.5</td>\n",
       "      <td>Fair</td>\n",
       "      <td>90.0</td>\n",
       "      <td>83.0</td>\n",
       "      <td>84.0</td>\n",
       "      <td>staff</td>\n",
       "      <td>...</td>\n",
       "      <td>Sapindaceae</td>\n",
       "      <td>bigleaf maple</td>\n",
       "      <td>Acer macrophyllum</td>\n",
       "      <td>BD</td>\n",
       "      <td>L</td>\n",
       "      <td>Yes</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>North America - Oregon and Washington west of ...</td>\n",
       "      <td>Name comes from the large five-lobed leaves, m...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Acer</th>\n",
       "      <td>153</td>\n",
       "      <td>1754</td>\n",
       "      <td>2017/05/24</td>\n",
       "      <td>ACMA</td>\n",
       "      <td>50.5</td>\n",
       "      <td>Fair</td>\n",
       "      <td>85.0</td>\n",
       "      <td>51.0</td>\n",
       "      <td>60.0</td>\n",
       "      <td>staff</td>\n",
       "      <td>...</td>\n",
       "      <td>Sapindaceae</td>\n",
       "      <td>bigleaf maple</td>\n",
       "      <td>Acer macrophyllum</td>\n",
       "      <td>BD</td>\n",
       "      <td>L</td>\n",
       "      <td>Yes</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>North America - Oregon and Washington west of ...</td>\n",
       "      <td>Name comes from the large five-lobed leaves, m...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Acer</th>\n",
       "      <td>155</td>\n",
       "      <td>1756</td>\n",
       "      <td>2017/05/24</td>\n",
       "      <td>ACMA</td>\n",
       "      <td>52.7</td>\n",
       "      <td>Fair</td>\n",
       "      <td>94.0</td>\n",
       "      <td>73.0</td>\n",
       "      <td>59.0</td>\n",
       "      <td>staff</td>\n",
       "      <td>...</td>\n",
       "      <td>Sapindaceae</td>\n",
       "      <td>bigleaf maple</td>\n",
       "      <td>Acer macrophyllum</td>\n",
       "      <td>BD</td>\n",
       "      <td>L</td>\n",
       "      <td>Yes</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>North America - Oregon and Washington west of ...</td>\n",
       "      <td>Name comes from the large five-lobed leaves, m...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Acer</th>\n",
       "      <td>163</td>\n",
       "      <td>2150</td>\n",
       "      <td>2017/05/24</td>\n",
       "      <td>ACMA</td>\n",
       "      <td>56.3</td>\n",
       "      <td>Fair</td>\n",
       "      <td>70.0</td>\n",
       "      <td>57.0</td>\n",
       "      <td>72.0</td>\n",
       "      <td>staff</td>\n",
       "      <td>...</td>\n",
       "      <td>Sapindaceae</td>\n",
       "      <td>bigleaf maple</td>\n",
       "      <td>Acer macrophyllum</td>\n",
       "      <td>BD</td>\n",
       "      <td>L</td>\n",
       "      <td>Yes</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>North America - Oregon and Washington west of ...</td>\n",
       "      <td>Name comes from the large five-lobed leaves, m...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Acer</th>\n",
       "      <td>594</td>\n",
       "      <td>13044</td>\n",
       "      <td>2017/06/29</td>\n",
       "      <td>ACMA</td>\n",
       "      <td>50.9</td>\n",
       "      <td>Fair</td>\n",
       "      <td>90.0</td>\n",
       "      <td>59.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>volunteer</td>\n",
       "      <td>...</td>\n",
       "      <td>Sapindaceae</td>\n",
       "      <td>bigleaf maple</td>\n",
       "      <td>Acer macrophyllum</td>\n",
       "      <td>BD</td>\n",
       "      <td>L</td>\n",
       "      <td>Yes</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>North America - Oregon and Washington west of ...</td>\n",
       "      <td>Name comes from the large five-lobed leaves, m...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Acer</th>\n",
       "      <td>23958</td>\n",
       "      <td>684418</td>\n",
       "      <td>2019/09/23</td>\n",
       "      <td>ACMA</td>\n",
       "      <td>59.5</td>\n",
       "      <td>Poor</td>\n",
       "      <td>77.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>staff</td>\n",
       "      <td>...</td>\n",
       "      <td>Sapindaceae</td>\n",
       "      <td>bigleaf maple</td>\n",
       "      <td>Acer macrophyllum</td>\n",
       "      <td>BD</td>\n",
       "      <td>L</td>\n",
       "      <td>Yes</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>North America - Oregon and Washington west of ...</td>\n",
       "      <td>Name comes from the large five-lobed leaves, m...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Quercus</th>\n",
       "      <td>24272</td>\n",
       "      <td>690856</td>\n",
       "      <td>2019/09/25</td>\n",
       "      <td>QUGA</td>\n",
       "      <td>69.9</td>\n",
       "      <td>Good</td>\n",
       "      <td>101.0</td>\n",
       "      <td>83.0</td>\n",
       "      <td>117.0</td>\n",
       "      <td>staff</td>\n",
       "      <td>...</td>\n",
       "      <td>Fagaceae</td>\n",
       "      <td>Oregon white oak</td>\n",
       "      <td>Quercus garryana</td>\n",
       "      <td>BD</td>\n",
       "      <td>L</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes - nuts</td>\n",
       "      <td>NaN</td>\n",
       "      <td>North America - southern British Columbia, Can...</td>\n",
       "      <td>Look for galls on the underside of leaves, whi...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Quercus</th>\n",
       "      <td>24462</td>\n",
       "      <td>695648</td>\n",
       "      <td>2019/09/27</td>\n",
       "      <td>QUGA</td>\n",
       "      <td>59.0</td>\n",
       "      <td>Fair</td>\n",
       "      <td>94.0</td>\n",
       "      <td>97.0</td>\n",
       "      <td>89.0</td>\n",
       "      <td>staff</td>\n",
       "      <td>...</td>\n",
       "      <td>Fagaceae</td>\n",
       "      <td>Oregon white oak</td>\n",
       "      <td>Quercus garryana</td>\n",
       "      <td>BD</td>\n",
       "      <td>L</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes - nuts</td>\n",
       "      <td>NaN</td>\n",
       "      <td>North America - southern British Columbia, Can...</td>\n",
       "      <td>Look for galls on the underside of leaves, whi...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Acer</th>\n",
       "      <td>25500</td>\n",
       "      <td>723643</td>\n",
       "      <td>2019/10/11</td>\n",
       "      <td>ACMA</td>\n",
       "      <td>84.5</td>\n",
       "      <td>Fair</td>\n",
       "      <td>69.0</td>\n",
       "      <td>62.0</td>\n",
       "      <td>67.0</td>\n",
       "      <td>staff</td>\n",
       "      <td>...</td>\n",
       "      <td>Sapindaceae</td>\n",
       "      <td>bigleaf maple</td>\n",
       "      <td>Acer macrophyllum</td>\n",
       "      <td>BD</td>\n",
       "      <td>L</td>\n",
       "      <td>Yes</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>North America - Oregon and Washington west of ...</td>\n",
       "      <td>Name comes from the large five-lobed leaves, m...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Acer</th>\n",
       "      <td>25507</td>\n",
       "      <td>724045</td>\n",
       "      <td>2019/10/11</td>\n",
       "      <td>ACMA</td>\n",
       "      <td>63.0</td>\n",
       "      <td>Poor</td>\n",
       "      <td>46.0</td>\n",
       "      <td>56.0</td>\n",
       "      <td>55.0</td>\n",
       "      <td>staff</td>\n",
       "      <td>...</td>\n",
       "      <td>Sapindaceae</td>\n",
       "      <td>bigleaf maple</td>\n",
       "      <td>Acer macrophyllum</td>\n",
       "      <td>BD</td>\n",
       "      <td>L</td>\n",
       "      <td>Yes</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>North America - Oregon and Washington west of ...</td>\n",
       "      <td>Name comes from the large five-lobed leaves, m...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>124 rows × 39 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           fid  OBJECTID  Inventory_ Species   DBH Condition  TreeHeight  \\\n",
       "Genus                                                                      \n",
       "Acer       128       953  2017/05/24    ACMA  50.5      Fair        90.0   \n",
       "Acer       153      1754  2017/05/24    ACMA  50.5      Fair        85.0   \n",
       "Acer       155      1756  2017/05/24    ACMA  52.7      Fair        94.0   \n",
       "Acer       163      2150  2017/05/24    ACMA  56.3      Fair        70.0   \n",
       "Acer       594     13044  2017/06/29    ACMA  50.9      Fair        90.0   \n",
       "...        ...       ...         ...     ...   ...       ...         ...   \n",
       "Acer     23958    684418  2019/09/23    ACMA  59.5      Poor        77.0   \n",
       "Quercus  24272    690856  2019/09/25    QUGA  69.9      Good       101.0   \n",
       "Quercus  24462    695648  2019/09/27    QUGA  59.0      Fair        94.0   \n",
       "Acer     25500    723643  2019/10/11    ACMA  84.5      Fair        69.0   \n",
       "Acer     25507    724045  2019/10/11    ACMA  63.0      Poor        46.0   \n",
       "\n",
       "         CrownWidth  CrownWid_1 CollectedB  ...       Family  \\\n",
       "Genus                                       ...                \n",
       "Acer           83.0        84.0      staff  ...  Sapindaceae   \n",
       "Acer           51.0        60.0      staff  ...  Sapindaceae   \n",
       "Acer           73.0        59.0      staff  ...  Sapindaceae   \n",
       "Acer           57.0        72.0      staff  ...  Sapindaceae   \n",
       "Acer           59.0        64.0  volunteer  ...  Sapindaceae   \n",
       "...             ...         ...        ...  ...          ...   \n",
       "Acer           40.0        32.0      staff  ...  Sapindaceae   \n",
       "Quercus        83.0       117.0      staff  ...     Fagaceae   \n",
       "Quercus        97.0        89.0      staff  ...     Fagaceae   \n",
       "Acer           62.0        67.0      staff  ...  Sapindaceae   \n",
       "Acer           56.0        55.0      staff  ...  Sapindaceae   \n",
       "\n",
       "               Common_nam         Genus_spec Functional Size Native  \\\n",
       "Genus                                                                 \n",
       "Acer        bigleaf maple  Acer macrophyllum         BD    L    Yes   \n",
       "Acer        bigleaf maple  Acer macrophyllum         BD    L    Yes   \n",
       "Acer        bigleaf maple  Acer macrophyllum         BD    L    Yes   \n",
       "Acer        bigleaf maple  Acer macrophyllum         BD    L    Yes   \n",
       "Acer        bigleaf maple  Acer macrophyllum         BD    L    Yes   \n",
       "...                   ...                ...        ...  ...    ...   \n",
       "Acer        bigleaf maple  Acer macrophyllum         BD    L    Yes   \n",
       "Quercus  Oregon white oak   Quercus garryana         BD    L    Yes   \n",
       "Quercus  Oregon white oak   Quercus garryana         BD    L    Yes   \n",
       "Acer        bigleaf maple  Acer macrophyllum         BD    L    Yes   \n",
       "Acer        bigleaf maple  Acer macrophyllum         BD    L    Yes   \n",
       "\n",
       "             Edible Nuisance  \\\n",
       "Genus                          \n",
       "Acer            NaN      NaN   \n",
       "Acer            NaN      NaN   \n",
       "Acer            NaN      NaN   \n",
       "Acer            NaN      NaN   \n",
       "Acer            NaN      NaN   \n",
       "...             ...      ...   \n",
       "Acer            NaN      NaN   \n",
       "Quercus  Yes - nuts      NaN   \n",
       "Quercus  Yes - nuts      NaN   \n",
       "Acer            NaN      NaN   \n",
       "Acer            NaN      NaN   \n",
       "\n",
       "                                                    Origin  \\\n",
       "Genus                                                        \n",
       "Acer     North America - Oregon and Washington west of ...   \n",
       "Acer     North America - Oregon and Washington west of ...   \n",
       "Acer     North America - Oregon and Washington west of ...   \n",
       "Acer     North America - Oregon and Washington west of ...   \n",
       "Acer     North America - Oregon and Washington west of ...   \n",
       "...                                                    ...   \n",
       "Acer     North America - Oregon and Washington west of ...   \n",
       "Quercus  North America - southern British Columbia, Can...   \n",
       "Quercus  North America - southern British Columbia, Can...   \n",
       "Acer     North America - Oregon and Washington west of ...   \n",
       "Acer     North America - Oregon and Washington west of ...   \n",
       "\n",
       "                                                Species_fa  \n",
       "Genus                                                       \n",
       "Acer     Name comes from the large five-lobed leaves, m...  \n",
       "Acer     Name comes from the large five-lobed leaves, m...  \n",
       "Acer     Name comes from the large five-lobed leaves, m...  \n",
       "Acer     Name comes from the large five-lobed leaves, m...  \n",
       "Acer     Name comes from the large five-lobed leaves, m...  \n",
       "...                                                    ...  \n",
       "Acer     Name comes from the large five-lobed leaves, m...  \n",
       "Quercus  Look for galls on the underside of leaves, whi...  \n",
       "Quercus  Look for galls on the underside of leaves, whi...  \n",
       "Acer     Name comes from the large five-lobed leaves, m...  \n",
       "Acer     Name comes from the large five-lobed leaves, m...  \n",
       "\n",
       "[124 rows x 39 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gen_df.query(\"DBH > 50\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7cd9f886-cb1d-4c7c-8861-059c42f9452f",
   "metadata": {},
   "source": [
    "##### There are 124 trees which are either Quercus or Acer that have a DBH of larger than 50 inches."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d4731653-42a3-4302-980c-7890f783aad9",
   "metadata": {},
   "source": [
    "### Q3 - Which genus has the highest mean DBH of the following genera: Quercus, Acer, or Fraxinus?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "c31a5b0b-4064-44fb-a295-d42207365151",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Quercus has the highest mean DBH.\n"
     ]
    }
   ],
   "source": [
    "fraxinus_df = genus_df.query(\"Genus == 'Fraxinus'\")\n",
    "fraxinus_mean = fraxinus_df[\"DBH\"].mean()\n",
    "acer_df = genus_df.query(\"Genus == 'Acer'\")\n",
    "acer_mean = acer_df[\"DBH\"].mean()\n",
    "quercus_df = genus_df.query(\"Genus =='Quercus'\")\n",
    "quercus_mean = quercus_df[\"DBH\"].mean()\n",
    "if fraxinus_mean > acer_mean and fraxinus_mean > quercus_mean:\n",
    "    print(\"Fraxinus has the highest mean DBH.\")\n",
    "elif acer_mean > fraxinus_mean and acer_mean > quercus_mean:\n",
    "    print(\"Acer has the highest mean DBH.\")\n",
    "else:\n",
    "    print(\"Quercus has the highest mean DBH.\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1813148d-1797-4205-8e62-5a4bf16f56c7",
   "metadata": {},
   "source": [
    "### Q4 - How many different species of trees are recorded in the Acer genus?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "0fb874d5-5d67-4525-8a79-4c581a01ef09",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3586"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "genus_df = pd.read_csv(\"/Users/katiegilchrist/Desktop/Python/Assignment 2 Data/portland_park_trees.csv\",index_col=30)\n",
    "acer_df = df[df['Genus'] == 'Acer']\n",
    "acer_species_count = acer_df['Genus_spec'].nunique()\n",
    "print(f\"There "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "74a06354-9bb3-4231-a7e4-7bd5c537dc64",
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'Acer'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[28], line 2\u001b[0m\n\u001b[1;32m      1\u001b[0m genus_df \u001b[38;5;241m=\u001b[39m pd\u001b[38;5;241m.\u001b[39mread_csv(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m/Users/katiegilchrist/Desktop/Python/Assignment 2 Data/portland_park_trees.csv\u001b[39m\u001b[38;5;124m\"\u001b[39m,index_col\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m32\u001b[39m)\n\u001b[0;32m----> 2\u001b[0m genus_df[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mCount\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m \u001b[43mgenus_df\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mgroupby\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mAcer\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mAcer_spec\u001b[39m\u001b[38;5;124m'\u001b[39m]\u001b[38;5;241m.\u001b[39mcount()\n",
      "File \u001b[0;32m~/miniconda3/envs/py4sa/lib/python3.10/site-packages/pandas/core/frame.py:8402\u001b[0m, in \u001b[0;36mDataFrame.groupby\u001b[0;34m(self, by, axis, level, as_index, sort, group_keys, squeeze, observed, dropna)\u001b[0m\n\u001b[1;32m   8399\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mYou have to supply one of \u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mby\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m and \u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mlevel\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m   8400\u001b[0m axis \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_get_axis_number(axis)\n\u001b[0;32m-> 8402\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mDataFrameGroupBy\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m   8403\u001b[0m \u001b[43m    \u001b[49m\u001b[43mobj\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[1;32m   8404\u001b[0m \u001b[43m    \u001b[49m\u001b[43mkeys\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mby\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   8405\u001b[0m \u001b[43m    \u001b[49m\u001b[43maxis\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43maxis\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   8406\u001b[0m \u001b[43m    \u001b[49m\u001b[43mlevel\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlevel\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   8407\u001b[0m \u001b[43m    \u001b[49m\u001b[43mas_index\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mas_index\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   8408\u001b[0m \u001b[43m    \u001b[49m\u001b[43msort\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43msort\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   8409\u001b[0m \u001b[43m    \u001b[49m\u001b[43mgroup_keys\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mgroup_keys\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   8410\u001b[0m \u001b[43m    \u001b[49m\u001b[43msqueeze\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43msqueeze\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   8411\u001b[0m \u001b[43m    \u001b[49m\u001b[43mobserved\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mobserved\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   8412\u001b[0m \u001b[43m    \u001b[49m\u001b[43mdropna\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mdropna\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   8413\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[0;32m~/miniconda3/envs/py4sa/lib/python3.10/site-packages/pandas/core/groupby/groupby.py:965\u001b[0m, in \u001b[0;36mGroupBy.__init__\u001b[0;34m(self, obj, keys, axis, level, grouper, exclusions, selection, as_index, sort, group_keys, squeeze, observed, mutated, dropna)\u001b[0m\n\u001b[1;32m    962\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m grouper \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m    963\u001b[0m     \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mpandas\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mcore\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mgroupby\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mgrouper\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m get_grouper\n\u001b[0;32m--> 965\u001b[0m     grouper, exclusions, obj \u001b[38;5;241m=\u001b[39m \u001b[43mget_grouper\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m    966\u001b[0m \u001b[43m        \u001b[49m\u001b[43mobj\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    967\u001b[0m \u001b[43m        \u001b[49m\u001b[43mkeys\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    968\u001b[0m \u001b[43m        \u001b[49m\u001b[43maxis\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43maxis\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    969\u001b[0m \u001b[43m        \u001b[49m\u001b[43mlevel\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlevel\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    970\u001b[0m \u001b[43m        \u001b[49m\u001b[43msort\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43msort\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    971\u001b[0m \u001b[43m        \u001b[49m\u001b[43mobserved\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mobserved\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    972\u001b[0m \u001b[43m        \u001b[49m\u001b[43mmutated\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mmutated\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    973\u001b[0m \u001b[43m        \u001b[49m\u001b[43mdropna\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdropna\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    974\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    976\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mobj \u001b[38;5;241m=\u001b[39m obj\n\u001b[1;32m    977\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39maxis \u001b[38;5;241m=\u001b[39m obj\u001b[38;5;241m.\u001b[39m_get_axis_number(axis)\n",
      "File \u001b[0;32m~/miniconda3/envs/py4sa/lib/python3.10/site-packages/pandas/core/groupby/grouper.py:888\u001b[0m, in \u001b[0;36mget_grouper\u001b[0;34m(obj, key, axis, level, sort, observed, mutated, validate, dropna)\u001b[0m\n\u001b[1;32m    886\u001b[0m         in_axis, level, gpr \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mFalse\u001b[39;00m, gpr, \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m    887\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m--> 888\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(gpr)\n\u001b[1;32m    889\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(gpr, Grouper) \u001b[38;5;129;01mand\u001b[39;00m gpr\u001b[38;5;241m.\u001b[39mkey \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m    890\u001b[0m     \u001b[38;5;66;03m# Add key to exclusions\u001b[39;00m\n\u001b[1;32m    891\u001b[0m     exclusions\u001b[38;5;241m.\u001b[39madd(gpr\u001b[38;5;241m.\u001b[39mkey)\n",
      "\u001b[0;31mKeyError\u001b[0m: 'Acer'"
     ]
    }
   ],
   "source": [
    "genus_df = pd.read_csv(\"/Users/katiegilchrist/Desktop/Python/Assignment 2 Data/portland_park_trees.csv\",index_col=32)\n",
    "genus_df[\"Count\"] = genus_df.groupby(\"Acer\")['Acer_spec'].count()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1534d22c-661e-47c3-88fc-2e546f19c813",
   "metadata": {},
   "source": [
    "### Q5 - World Cities"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "10edebe3-6115-4d60-a05f-e902709a351c",
   "metadata": {},
   "source": [
    "##### I calculated a new column named \"pop_M\" (population in millions), by transforming the \"pop\" (population) column."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "1af88529-3360-4110-9ea2-ee1699612685",
   "metadata": {},
   "outputs": [],
   "source": [
    "cities_df = pd.read_csv(\"/Users/katiegilchrist/Desktop/Python/Assignment 2 Data/world_cities.csv\")\n",
    "cities_df[\"pop_M\"] = (cities_df[\"pop\"]/1000000)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "abc4d7a7-44b8-442d-8793-365e2b4c8c23",
   "metadata": {},
   "source": [
    "##### I then removed the original \"pop\" column."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "47b1a8e0-0225-4301-bae2-bb9c1773fd9d",
   "metadata": {},
   "outputs": [],
   "source": [
    "cities_update = cities_df.drop([\"pop\"], axis=1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2b1bda4e-705c-4bc3-b798-5159f178e6f7",
   "metadata": {},
   "source": [
    "##### I picked **Kiev** as my city as my name starts with a 'K', therefore my country is **Ukraine**."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a8950306-2866-4dc5-9d8b-f6209e6a0c7b",
   "metadata": {},
   "source": [
    "##### I then subset the five biggest cities from Ukraine, printing the result below."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "e7beeac4-976c-44cb-9b30-2df78ff7c2d5",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>city</th>\n",
       "      <th>country</th>\n",
       "      <th>lat</th>\n",
       "      <th>lon</th>\n",
       "      <th>capital</th>\n",
       "      <th>pop_M</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>18004</th>\n",
       "      <td>Kiev</td>\n",
       "      <td>Ukraine</td>\n",
       "      <td>50.43</td>\n",
       "      <td>30.52</td>\n",
       "      <td>1</td>\n",
       "      <td>2.491404</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17880</th>\n",
       "      <td>Kharkiv</td>\n",
       "      <td>Ukraine</td>\n",
       "      <td>49.98</td>\n",
       "      <td>36.22</td>\n",
       "      <td>0</td>\n",
       "      <td>1.421205</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9464</th>\n",
       "      <td>Dnipropetrovs'k</td>\n",
       "      <td>Ukraine</td>\n",
       "      <td>48.45</td>\n",
       "      <td>34.98</td>\n",
       "      <td>0</td>\n",
       "      <td>1.025044</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26871</th>\n",
       "      <td>Odesa</td>\n",
       "      <td>Ukraine</td>\n",
       "      <td>46.47</td>\n",
       "      <td>30.73</td>\n",
       "      <td>0</td>\n",
       "      <td>0.995028</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9662</th>\n",
       "      <td>Donetsk</td>\n",
       "      <td>Ukraine</td>\n",
       "      <td>48.00</td>\n",
       "      <td>37.82</td>\n",
       "      <td>0</td>\n",
       "      <td>0.980419</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  city  country    lat    lon  capital     pop_M\n",
       "18004             Kiev  Ukraine  50.43  30.52        1  2.491404\n",
       "17880          Kharkiv  Ukraine  49.98  36.22        0  1.421205\n",
       "9464   Dnipropetrovs'k  Ukraine  48.45  34.98        0  1.025044\n",
       "26871            Odesa  Ukraine  46.47  30.73        0  0.995028\n",
       "9662           Donetsk  Ukraine  48.00  37.82        0  0.980419"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(cities_update.query(\"country == 'Ukraine'\")\n",
    ".sort_values(by=\"pop_M\", ascending=False)\n",
    ".head(5))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3a3d8c99-2578-455d-b32e-d712dd197b31",
   "metadata": {},
   "source": [
    "## **Python Data Visualization**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a810218a-7d39-43d8-9814-d9756de880de",
   "metadata": {},
   "source": [
    "### Graph 1 - Creating a scatterplot for just trees in the Ulmus genus with DBH mapped to the x-axis and tree height mapped to the y-axis."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "0d1082f8-3804-4142-b692-175ae1ae9554",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "193094f4-806a-4ffc-bb8e-a91d82021636",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
